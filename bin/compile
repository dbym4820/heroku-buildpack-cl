#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

mktmpdir() {
  dir=$(mktemp -t node-$1-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}
function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# parse and derive params
BUILDPACK_DIR=$(cd $(dirname $0); cd ..; pwd) # absolute path of buildpack
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

import_env() {
  local name=$1
  [ -f $ENV_DIR/$name ] && export "$name=$(< $ENV_DIR/$name)"
}

import_env CL_IMPL
import_env CL_WEBSERVER
import_env RESET_CACHE

CL_DIR="$BUILDPACK_DIR/$CL_IMPL"
echo "-----> compile params: $BUILD_DIR $CACHE_DIR $ENV_DIR"

if [ $RESET_CACHE ]; then
  echo "-----> flushing cache"
  rm -rf $CACHE_DIR/*
fi

echo "-----> CL_IMPL: $CL_IMPL"

case $CL_IMPL in
  sbcl)
    S3_BUCKET="sbcl-heroku"
    CL_PACKAGE="https://ccl.clozure.com/ftp/pub/release/1.11/ccl-1.11-linuxx86.tar.gz"
    DECOMPRESS="tar jxvf - -C $CL_DIR"
    ;;
  ccl)
    S3_BUCKET="cl-heroku"
    CL_PACKAGE="https://ccl.clozure.com/ftp/pub/release/1.11/ccl-1.11-linuxx86.tar.gz"
    DECOMPRESS="tar xzf - -C $CL_DIR"
    export CCL_DEFAULT_DIRECTORY=$CL_DIR # overwrite CCL_DEFAULT_DIRECTORY on ccl64
    ;;
  *)
    echo "-----> ! Please set CL_IMPL: heroku config:add CL_IMPL={sbcl|ccl}."
    exit 1
esac

echo "-----> CL_WEBSERVER: $CL_WEBSERVER"

# setting up paths for building
echo "-----> Getting patched versions of libraries"

mkdir $CACHE_DIR/repos    # should be under an if to avoid error

echo "###########################"
ls -la $CACHE_DIR | echo
echo "###########################"

pushd $CACHE_DIR/repos

# if [ -d $CACHE_DIR/repos/dusque ]; then
#      echo 'dusque already present'
#      pushd dusque
#      git pull origin master
#      popd
# else
#     git clone git://github.com/dbym4820/heroku-dusque.git dusque
# fi
# if [ -d $CACHE_DIR/repos/hunchentoot ]; then
#      echo 'hunchentoot already present'
#      pushd hunchentoot
#      git pull origin master
#      popd
# else
#     git clone git://github.com/edicl/hunchentoot.git
# fi

popd
;;
*)

echo "-----> Installing $CL_IMPL"
if [ ! -d $CL_DIR ]; then
    echo "-----> Fetching $CL_IMPL"
    mkdir -p $CL_DIR  && curl $CL_PACKAGE -s -o -  | $DECOMPRESS
fi

# add to slug
cp -r $CL_DIR $BUILD_DIR

echo "$CL_IMPL installed" | indent

mkdir -p $1/.profile.d
ENVVARS=$1/.profile.d/build-env.sh


export BUILDPACK_DIR
export CACHE_DIR
export BUILD_DIR

echo "export BUILDPACK_DIR" >> $ENVVARS
echo "export CACHE_DIR" >> $ENVVARS
echo "export BUILD_DIR" >> $ENVVARS


touch $BUILD_DIR/lispapp
echo "-----> Starting build"
case $CL_IMPL in
  sbcl) sh $CL_DIR/sbcl-1.2.13-x86-64-linux/run-sbcl.sh --load "$BUILDPACK_DIR/setup/compile.lisp";;
  ccl) $CL_DIR/scripts/ccl64 -l "$BUILDPACK_DIR/setup/compile.lisp";;
esac
echo "-----> Build finished"

chmod a+x $BUILD_DIR/lispapp
